<?xml version="1.0"?>

<?if $(sys.BUILDARCH)="x86"?>
    <?define Program_Files="ProgramFilesFolder"?>
<?elseif $(sys.BUILDARCH)="x64"?>
    <?define Program_Files="ProgramFiles64Folder"?>
<?else?>
    <?error Unsupported value of sys.BUILDARCH=$(sys.BUILDARCH)?>
<?endif?>

<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
   <Product Id="*" UpgradeCode="{{.UpgradeCode}}"
            Name="{{.Product}}"
            Version="{{.VersionOk}}"
            Manufacturer="{{.Company}}"
            Language="1033">

      <Package InstallerVersion="200" Compressed="yes" Comments="Windows Installer Package"/>

      <Media Id="1" Cabinet="product.cab" EmbedCab="yes"/>

      <Upgrade Id="{{.UpgradeCode}}">
         <UpgradeVersion Minimum="{{.VersionOk}}" OnlyDetect="yes" Property="NEWERVERSIONDETECTED"/>
         <UpgradeVersion Minimum="0.0.0" Maximum="{{.VersionOk}}" IncludeMinimum="yes" IncludeMaximum="no"
                         Property="OLDERVERSIONBEINGUPGRADED"/>
      </Upgrade>
      <Condition Message="A newer version of this software is already installed.">NOT NEWERVERSIONDETECTED</Condition>

      <Directory Id="TARGETDIR" Name="SourceDir">
         <Directory Id="$(var.Program_Files)">
            <Directory Id="INSTALLDIR" Name="{{.Product}}">

            <!--
               {{if gt (.Files.Items | len) 0}}
               <Component Id="ApplicationFiles" Guid="{{.Files.Guid}}">
                  {{range $i, $e := .Files.Items}}
                    <File Id="ApplicationFile{{$i}}" Source="{{$e}}"/>
                  {{end}}
               </Component>
               {{end}}
               {{if gt (.Directories | len) 0}}
               {{range $i, $e := .Directories}}
               <Directory Id="APPDIR{{$i}}" Name="{{$e}}" />
               {{end}}
               {{end}}
             -->

               <!-- go-msi doesn't support adding services, hard coded service -->
               <Component Id='giggle' Guid='0802d31d-44b2-4c91-a76b-13f424ee6aea'>
                 {{range $i, $e := .Files.Items}}
                 <File Id="ServiceFile{{$i}}" Source="{{$e}}" DiskId='1' KeyPath='yes' />
                 {{end}}
                 <ServiceInstall Id="giggle" Type="ownProcess" Name="giggle" DisplayName="giggle"
                     Description="Sync Overleaf with Github" Start="auto" Account="LocalSystem"
                     ErrorControl="normal" Interactive="yes">
                 </ServiceInstall>
                 <ServiceControl Id="giggle" Start="install" Stop="both" Remove="uninstall" Name="giggle" Wait="no" />
               </Component>
            </Directory>
         </Directory>

         {{if gt (.Env.Vars | len) 0}}
         <Component Id="ENVS" Guid="{{.Env.Guid}}">
          {{range $i, $e := .Env.Vars}}
          <Environment Id="ENV{{$i}}"
            Name="{{$e.Name}}"
            Value="{{$e.Value}}"
            Permanent="{{$e.Permanent}}"
            Part="{{$e.Part}}"
            Action="{{$e.Action}}"
            System="{{$e.System}}" />
          {{end}}
        </Component>
        {{end}}

         {{if gt (.Shortcuts.Items | len) 0}}
         <Directory Id="ProgramMenuFolder">
            <Directory Id="ProgramMenuSubfolder" Name="{{.Product}}">
               <Component Id="ApplicationShortcuts" Guid="{{.Shortcuts.Guid}}">
               {{range $i, $e := .Shortcuts.Items}}
                  <Shortcut Id="ApplicationShortcut{{$i}}"
                        Name="{{$e.Name}}"
                        Description="{{$e.Description}}"
                        Target="{{$e.Target}}"
                        WorkingDirectory="{{$e.WDir}}"
                        {{if gt ($e.Arguments | len) 0}}
                        Arguments="{{$e.Arguments}}"
                        {{end}}
                        >
                        {{if gt ($e.Icon | len) 0}}
                        <Icon Id="Icon{{$i}}" SourceFile="{{$e.Icon}}" />
                        {{end}}
                  </Shortcut>
                  <RegistryValue Root="HKCU"
                    Key="Software\{{$.Company}}\{{$.Product}}"
                    Name="installed{{$i}}"
                    Type="integer" Value="1" KeyPath="yes"/>
                {{end}}
                <RemoveFolder Id="ProgramMenuSubfolder" On="uninstall"/>
               </Component>
            </Directory>
         </Directory>
         {{end}}

      </Directory>

      <InstallExecuteSequence>
         <RemoveExistingProducts After="InstallValidate"/>
      </InstallExecuteSequence>

      <Feature Id="DefaultFeature" Level="1">
         {{if gt (.Env.Vars | len) 0}}
         <ComponentRef Id="ENVS"/>
         {{end}}
       <!--
         {{if gt (.Files.Items | len) 0}}
         <ComponentRef Id="ApplicationFiles"/>
         {{end}}
       -->
         {{if gt (.Shortcuts.Items | len) 0}}
         <ComponentRef Id="ApplicationShortcuts"/>
         {{end}}
         {{range $i, $e := .Directories}}
         <ComponentGroupRef Id="AppFiles{{$i}}" />
         {{end}}
         <!-- go-msi doesn't support adding services, hard coded service -->
         <ComponentRef Id="giggle"/>
      </Feature>

      <UI>
         <!-- Define the installer UI -->
         <UIRef Id="WixUI_HK" />
      </UI>

      <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR" />
   </Product>
</Wix>
